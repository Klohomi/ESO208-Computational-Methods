method = input("Enter option (a/b/c/d): ",'s');
n = input("Enter degree: ");
A = input("Enter matrix: ");
max_iter=input("Maximum iterations allowed:");
max_err=input("Maximum relative error in percent:");
X=[1,1,1];

if method == 'a'
    max = 0;
    for i = 1:n
        if abs(X(i))>max
                max= X(i);
        end 
    end
    err = inf;
    max1 = 0;
    X1 = zeros(n,1);
    itr=0;
    while err>max_err && itr<=max_iter
        max1 = 0;
        for i = 1:n 
            sum = 0;
            for j = 1:n
                sum = sum + A(i,j)*X(j);
            end
            X1(i) = sum;
            if abs(X1(i))>abs(max1)
                max1= X1(i);
            end
        end
        X1 = X1/max1;
        err = abs((max1 - max)*100/max1);
        max = max1;
        X = X1;
        itr++;
    end
    
    disp("Eigenvalue is  ")
    disp(max1)
    
    mag = norm(X1);
    disp("Eigen Vector is: ");
    disp(X1/mag)
    disp("Number of iterations : ");
    disp(itr)

elseif method == 'b'
    max = 0;
    for i = 1:n
        if abs(X(i))>max
                max= X(i);
        end 
    end
    err = inf;
    max1 = 0;
    X1 = zeros(n,1);
    A = inv(A);
    itr=0;
    while err>max_err && itr<=max_iter
        max1 = 0;
        for i = 1:n 
            sum = 0;
            for j = 1:n
                sum = sum + A(i,j)*X(j);
            end
            X1(i) = sum;
            if abs(X1(i))>abs(max1)
                max1= X1(i);
            end
        end
        X1 = X1/max1;
        err = abs((max1 - max)*100/max1);
        max = max1;
        X = X1;
        itr++;
    end
    
    disp("Eigenvalue is  ")
    disp(1/(max1))
    
    mag = norm(X1);
    disp("Eigen Vector is: ");
    disp(X1/mag)
    disp("Number of iterations : ");
    disp(itr)
    
elseif method == 'c'
    a = input("Enter shifting scaler: ");
    max = 0;
    for i = 1:n
        if abs(X(i))>max
                max= X(i);
        end 
    end
    err = inf;
    max1 = 0;
    X1 = zeros(n,1);
    A = A - a*eye(n);
    A = inv(A);
    itr=0;
    while err>max_err && itr<=max_iter
        max1 = 0;
        for i = 1:n 
            sum = 0;
            for j = 1:n
                sum = sum + A(i,j)*X(j);
            end
            X1(i) = sum;
            if abs(X1(i))>abs(max1)
                max1= X1(i);
            end
        end
    
        X1 = X1/max1;
        err = abs((max1 - max)*100/max1);
        max = max1;
        X = X1;
        itr++;
    end
    
        disp("X1: ")
        mag=norm(X1);
        disp(X1/mag);
        
        disp("eigenvalue is  ")
        disp(a + 1/(max1));
        itr
    
else
    A0=A;
    Q=[];
    A2=zeros(n);
    R=zeros(n);
    Q(:,1)=A0(:,1)/norm(A0(:,1));
    for i=2:n
        for k=1:n
            M(k,1)=0;
        end;
        for j=1:i-1
            M(:,1)+=(dot(A(:,i),Q(:,j)))*Q(:,j);
            R(j,i)=(dot(A(:,i),Q(:,j)));
        end;
        z(:,i)=A(:,i)-M(:,1);
        Q(:,i)=z(:,i)/norm(z(:,i),2);
    end
    for i=1:n
        R(i,i)=dot(Q(:,i),A(:,i));
    end
    A1=R*Q;
    iter=1;
    err=inf;
    while err>max_err && iter<=max_iter
        Q=[];
        R=zeros(n);
        Q(:,1)=A1(:,1)/norm(A1(:,1));
        for i=2:n
            for k=1:n
                M(k,1)=0;
            end;
            for j=1:i-1
                M(:,1)+=(dot(A1(:,i),Q(:,j)))*Q(:,j);
                R(j,i)=(dot(A1(:,i),Q(:,j)));
            end;
            z(:,i)=A1(:,i)-M(:,1);
            Q(:,i)=z(:,i)/norm(z(:,i),2);
        end
        for i=1:n
            R(i,i)=dot(Q(:,i),A1(:,i));
        end
        A2=R*Q;
        error=[];
        for i=1:n
            error(i)=abs((A2(i,i)-A1(i,i))/A2(i,i)*100);
        end;
        err=max(error);
       # disp(err);
        A1=A2;
        iter++;
    end
    disp('eigenvalues:');
    disp(diag(A2));
    iter

end;    
    
